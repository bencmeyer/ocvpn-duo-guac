# OpenConnect + Guacamole all-in-one for Unraid
# Uses jasonbean/guacamole which is Alpine-based

FROM jasonbean/guacamole:latest

# Install OpenConnect and dependencies
# Skip xmlsec - let openconnect use its bundled dependencies
RUN apk add --no-cache \
    supervisor \
    curl \
    expect \
    bind-tools \
    iputils \
    iproute2 \
    ca-certificates \
    nano \
    python3 \
    py3-pip && \
    pip3 install --no-cache-dir flask && \
    # Install openconnect separately and install its dependencies
    apk add --no-cache openconnect --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community/ || \
    apk add --no-cache openconnect

# Create directories
RUN mkdir -p /opt/openconnect /var/log/supervisor

# Copy OpenConnect connection script
COPY connect-vpn.sh /opt/openconnect/connect-vpn.sh
RUN chmod +x /opt/openconnect/connect-vpn.sh

# Copy simple web UI for OpenConnect control
COPY openconnect-web.py /opt/openconnect/web.py
RUN chmod +x /opt/openconnect/web.py

# Add supervisor config for OpenConnect services (complements the base image's config)
COPY allin1/supervisord-openconnect.conf /etc/supervisor/conf.d/openconnect-services.conf

# Copy Guacamole admin credential update script
COPY update-guac-admin.sh /opt/update-guac-admin.sh
RUN chmod +x /opt/update-guac-admin.sh

# Modify base supervisord.conf to include our additional configs and enable socket
RUN echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[include]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "files = /etc/supervisor/conf.d/openconnect-services.conf" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[unix_http_server]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "file=/var/run/supervisor.sock" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[supervisorctl]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "serverurl=unix:///var/run/supervisor.sock" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[rpcinterface:supervisor]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface" >> /etc/supervisor/conf.d/supervisord.conf && \
    # Also update the fallback config file for supervisorctl
    sed -i 's|file=/run/supervisord.sock|file=/var/run/supervisor.sock|' /etc/supervisord.conf && \
    sed -i 's|serverurl=unix:///run/supervisord.sock|serverurl=unix:///var/run/supervisor.sock|' /etc/supervisord.conf

# Configure default Guacamole credentials (admin/admin)
# This creates a default admin user in the user-mapping.xml template
RUN sed -i 's|<user-mapping>|<user-mapping>\n\n    <!-- Default admin user -->\n    <authorize username="admin" password="admin">\n    </authorize>|' /etc/firstrun/templates/user-mapping.xml

# Expose ports
EXPOSE 8080 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/guacamole/ || exit 1

# Use the base image's entry point which handles supervisor correctly
# (no need to override CMD - base image handles it)
